// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/recipes": {
            "get": {
                "description": "List all recipes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "List Recipe",
                "responses": {
                    "200": {
                        "description": "Recipe listed successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Recipe"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new recipes and saves it to a json file",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Create Recipe",
                "responses": {
                    "200": {
                        "description": "Recipe created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Recipe"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/recipes/:id": {
            "put": {
                "description": "Update an exiting recipe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Update Recipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update recipe by id",
                        "name": "recipeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Recipe"
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an exiting recipe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recipes"
                ],
                "summary": "Delete Recipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "delete recipe by id",
                        "name": "recipeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Recipe"
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Recipe": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "ingredient": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "instruction": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "publishedAt": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "Version: 1.0.0",
	Host:             "localhost:5000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Tage Services API",
	Description:      "This is a sample recipes API implementation. It's a learning jounery to understand",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
